/*########################*|
|*         Task
|*########################*/

/* reset */

button {
  cursor: pointer;
  background: none;
  border: none;
}

summary {
  cursor: pointer;
}

::slotted([title]) {
  cursor: help;
}

/*       Structure
|*-------------------------*/

div {
  display: inline-flex;
  flex-direction: column;
  visibility: visible;
  opacity: 1;

  slot {
    margin-left: 0.3rem;
  }
}

button {
  font-size: inherit;
  width: 1.5rem;
  height: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1.5rem;
}

details {
  display: inline-flex;
  flex-direction: column;

  summary {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    box-sizing: border-box;

    transition: all 0.25s ease;
    -moz-transition: all 0.25s ease;
    -o-transition: all 0.25s ease;
    -webkit-transition: all 0.25s ease;

    &::before {
      content: '‚û§';
      width: 1.5rem;
      height: 1.5rem;
      text-align: center;
      align-self: center;

      transition: all 0.25s ease;
      -moz-transition: all 0.25s ease;
      -o-transition: all 0.25s ease;
      -webkit-transition: all 0.25s ease;
    }

    & button:first-child {
      margin-right: 0.35rem;
      font-size: 1.24rem;
      display: none;
    }

    &:hover button:first-child {
      display: flex;
    }

    & button:last-child {
      margin-left: 0.2rem;
    }
  }

  &[open] summary {
    &::before {
      transform: rotate(90deg);
    }
  }
}

/*      Interaction
|*-------------------------*/

div.drop-hover {
  summary {
    margin: 0.5rem 0;
    padding: 0.5rem 0;
  }
}

div.drag-node {
  opacity: 0.5;
}

div.menu-open {
  margin: 0.5rem 0 0.6rem;

  summary {
    ::slotted(span) {
      opacity: 0;
    }
    ::after {
      opacity: 0;
    }

    button:first-child {
      display: flex !important;
    }
  }

  section {
    margin-top: 0.6rem;
  }
}

/* states */

div {
  & [name='task-name'] {
    &::after {
      content: '';
      display: inline-flex;
      justify-content: center;
      padding-left: 0.3rem;
    }
  }

  &.editing {
    & [name='task-name'] {
      &::after {
        content: '' !important;
        display: none !important;
      }
    }
  }

  &.done {
    & [name='task-name']::after {
      content: '‚úì';
    }
  }

  &.pause {
    & [name='task-name']::after {
      content: '‚ùô‚ùô';
    }
  }

  &.active {
    & [name='task-name']::after {
      content: 'üëÅ';
    }
  }

  &.reject {
    & [name='task-name']::after {
      content: '‚úò';
    }
  }

  &.leaf {
    summary {
      cursor: default;

      &::before {
        content: '';
      }
    }
  }
}

/* focus */

div.focus summary {
  & details {
    filter: none;
  }

  &:before {
    display: none;
  }
}

/* utility */

.hidden {
  visibility: hidden;
}

/*         Theme
|*-------------------------*/

/* forest */

.theme-forest {
  summary {
    color: var(--forest-fg);

    &::before {
      color: var(--forest-highlight) !important;
    }
  }

  &.leaf.editing {
    summary {
      color: var(--forest-fg-shade);
      &:hover {
        color: var(--forest-fg-shade) !important;
      }

      button {
        color: var(--forest-bg-accent) !important;

        &:hover {
          background-color: var(--forest-bg-shade) !important;
          color: var(--forest-fg-accent) !important;
        }
      }
    }
  }

  /* states */
  &.done {
    & [name='task-name']::after {
      color: var(--forest-state-done);
    }
  }

  &.pause {
    & [name='task-name']::after {
      color: var(--forest-state-pause);
    }
  }

  &.active {
    & [name='task-name']::after {
      color: var(--forest-state-active);
    }
  }

  &.reject {
    & [name='task-name']::after {
      color: var(--forest-state-reject);
    }
  }

  /* drag-n-drop */
  .drop-above {
    background: linear-gradient(
      0deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) 95%,
      var(--forest-highlight) 96%,
      var(--forest-highlight) 100%
    );
  }

  .drop-over {
    background-color: var(--forest-highlight);
  }

  .drop-below {
    background: linear-gradient(
      0deg,
      var(--forest-highlight) 0%,
      var(--forest-highlight) 4%,
      rgba(0, 0, 0, 0) 5%,
      rgba(0, 0, 0, 0) 100%
    );
  }
}

/* gruvbox */

div.theme-gruvbox {
  summary {
    color: var(--gruvbox-fg);

    &::before {
      color: var(--gruvbox-highlight) !important;
    }
  }

  &.leaf.editing {
    summary {
      color: var(--gruvbox-fg-shade);
      &:hover {
        color: var(--gruvbox-fg-shade) !important;
      }
      button {
        color: var(--gruvbox-bg-accent) !important;

        &:hover {
          background-color: var(--gruvbox-bg-shade) !important;
          color: var(--gruvbox-fg-accent) !important;
        }
      }
    }
  }

  &.editing {
    color: var(--gruvbox-fg-neutral);
  }

  /* states */
  &.done {
    & [name='task-name']::after {
      color: var(--gruvbox-state-done);
    }
  }

  &.pause {
    & [name='task-name']::after {
      color: var(--gruvbox-state-pause);
    }
  }

  &.active {
    & [name='task-name']::after {
      color: var(--gruvbox-state-active);
    }
  }

  &.reject {
    & [name='task-name']::after {
      color: var(--gruvbox-state-reject);
    }
  }

  /* drag-n-drop */
  .drop-above {
    background: linear-gradient(
      0deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) 95%,
      var(--gruvbox-highlight) 96%,
      var(--gruvbox-highlight) 100%
    );
  }

  .drop-over {
    background-color: var(--gruvbox-highlight);
  }

  .drop-below {
    background: linear-gradient(
      0deg,
      var(--gruvbox-highlight) 0%,
      var(--gruvbox-highlight) 4%,
      rgba(0, 0, 0, 0) 5%,
      rgba(0, 0, 0, 0) 100%
    );
  }
}
