::selection {
  background-color: var(--color-highlight);
  color: var(--color-highlight-text);
}

select {
  appearance: base-select;
  background-color: var(--color-background-select);
  border: 1px solid black;
  border-color: var(--color-border-select);
  box-shadow: 0 0 0.2rem var(--color-shadow);
  color: var(--color-subtitle);
  font-size: 1rem;
  cursor: pointer;
  display: inline-flex;
  margin: 0.5rem 0;
  outline: none;
  padding: 0 0.5rem;
  transition: all 0.25s ease;
  -moz-transition: all 0.25s ease;
  -o-transition: all 0.25s ease;
  -webkit-transition: all 0.25s ease;

  &::picker(select) {
    appearance: base-select;
  }

  &::picker-icon {
    margin-top: 0.1rem;
    font-size: 0.9rem;
  }
  &:hover {
    background-color: var(--color-hover-background-select);
    color: var(--color-hover-text);
  }

  &:focus {
    background-color: var(--color-focus-select);
  }

  /* &.done,
  &.done option {
    background-color: var(--color-background-done);
    color: var(--color-text-done);
  } */
}

select option {
  background-color: var(--color-background-select);
  color: var(--color-text);
  text-align: left;

  &:hover {
    background: var(--color-highlight);
    color: var(--color-shadow);
    background-opacity: 0.5;
  }

  &::checkmark {
    display: none;
  }

  &:checked {
    color: var(--color-highlight);
    &::checkmark {
      display: none;
    }
  }

  &:hover:checked {
    background-color: var(--color-background-select);
  }
}

/* workaround for select component not jiving with shadow 
* selectors, when select is open menu should be visible
*/
/* TODO: constrain this to compact mode once there is a class on task-view */
task-node {
  &:has(> select:open) {
    &::part(task-menu) {
      visibility: visible;
      opacity: 1;
      z-index: 10;
    }

    &::part(menu-item) {
      visibility: visible !important;
      opacity: 1 !important;
    }

    &::part(menu-button) {
      color: var(--color-hover-text-button);
      background-color: var(--color-hover-background-button);
    }
  }
}
